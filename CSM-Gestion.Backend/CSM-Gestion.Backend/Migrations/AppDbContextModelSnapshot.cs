// <auto-generated />
using System;
using CSM_Gestion.Backend.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace CSM_Gestion.Backend.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.21")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("CSM_Gestion.Backend.Models.Asociado", b =>
                {
                    b.Property<Guid>("AsociadoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id_asociado");

                    b.Property<string>("ApellidoMaterno")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("apellido_materno");

                    b.Property<string>("ApellidoPaterno")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("apellido_paterno");

                    b.Property<string>("BaseZonal")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("base_zonal");

                    b.Property<string>("CorreoActual")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("correo_actual");

                    b.Property<string>("Departamento")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("departamento");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("direccion");

                    b.Property<string>("Distrito")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("distrito");

                    b.Property<string>("Dni")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("character varying(8)")
                        .HasColumnName("dni");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("estado");

                    b.Property<string>("EstadoCivil")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("estado_civil");

                    b.Property<DateOnly>("FechaNacimiento")
                        .HasColumnType("date")
                        .HasColumnName("fecha_nacimiento");

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_registro");

                    b.Property<DateTime?>("FechaRevision")
                        .HasColumnType("date")
                        .HasColumnName("fecha_aprobado");

                    b.Property<string>("FotoAsociado")
                        .HasColumnType("text")
                        .HasColumnName("foto_asociado");

                    b.Property<string>("FotoFirma")
                        .HasColumnType("text")
                        .HasColumnName("foto_firma");

                    b.Property<string>("FotoVoucher")
                        .HasColumnType("text")
                        .HasColumnName("foto_voucher");

                    b.Property<string>("Genero")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("genero");

                    b.Property<string>("GradoInstruccion")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("grado_instruccion");

                    b.Property<string>("LibretaMilitar")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("libreta_militar");

                    b.Property<string>("Nacionalidad")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("nacionalidad");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("nombre");

                    b.Property<string>("NumeroCelular")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)")
                        .HasColumnName("numero_celular");

                    b.Property<string>("NumeroRuc")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("numero_ruc");

                    b.Property<string>("Ocupacion")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("ocupacion");

                    b.Property<string>("Provincia")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("provincia");

                    b.HasKey("AsociadoId");

                    b.ToTable("asociado");
                });

            modelBuilder.Entity("CSM_Gestion.Backend.Models.Conyuge", b =>
                {
                    b.Property<Guid>("ConyugeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id_conyuge");

                    b.Property<string>("ApellidoMaterno")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("apellido_materno");

                    b.Property<string>("ApellidoPaterno")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("apellido_paterno");

                    b.Property<Guid>("AsociadoId")
                        .HasColumnType("uuid")
                        .HasColumnName("id_asociado");

                    b.Property<string>("Dni")
                        .HasMaxLength(8)
                        .HasColumnType("character varying(8)")
                        .HasColumnName("dni");

                    b.Property<string>("Estudios")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("grado_estudios");

                    b.Property<DateOnly?>("FechaNacimiento")
                        .HasColumnType("date")
                        .HasColumnName("fecha_nacimiento");

                    b.Property<string>("Nombre")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("nombre");

                    b.HasKey("ConyugeId");

                    b.HasIndex("AsociadoId")
                        .IsUnique();

                    b.ToTable("conyuge");
                });

            modelBuilder.Entity("CSM_Gestion.Backend.Models.Hijo", b =>
                {
                    b.Property<Guid>("HijoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id_hijo");

                    b.Property<Guid>("AsociadoId")
                        .HasColumnType("uuid")
                        .HasColumnName("id_asociado");

                    b.Property<string>("Dni")
                        .HasMaxLength(8)
                        .HasColumnType("character varying(8)")
                        .HasColumnName("dni");

                    b.Property<string>("Estudios")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("grado_estudios");

                    b.Property<DateOnly>("FechaNacimiento")
                        .HasColumnType("date")
                        .HasColumnName("fecha_nacimiento");

                    b.Property<string>("Genero")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("genero");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("nombre");

                    b.HasKey("HijoId");

                    b.HasIndex("AsociadoId");

                    b.ToTable("hijo");
                });

            modelBuilder.Entity("CSM_Gestion.Backend.Models.Conyuge", b =>
                {
                    b.HasOne("CSM_Gestion.Backend.Models.Asociado", "Asociado")
                        .WithOne("Conyuge")
                        .HasForeignKey("CSM_Gestion.Backend.Models.Conyuge", "AsociadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Asociado");
                });

            modelBuilder.Entity("CSM_Gestion.Backend.Models.Hijo", b =>
                {
                    b.HasOne("CSM_Gestion.Backend.Models.Asociado", "Asociado")
                        .WithMany("Hijos")
                        .HasForeignKey("AsociadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Asociado");
                });

            modelBuilder.Entity("CSM_Gestion.Backend.Models.Asociado", b =>
                {
                    b.Navigation("Conyuge");

                    b.Navigation("Hijos");
                });
#pragma warning restore 612, 618
        }
    }
}
